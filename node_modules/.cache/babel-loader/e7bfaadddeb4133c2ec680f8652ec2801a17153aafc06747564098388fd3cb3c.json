{"ast":null,"code":"var _jsxFileName = \"D:\\\\ts\\\\my-dashboard\\\\src\\\\Chatbot.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Predefined Q&A for the chatbot\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst predefinedQA = [{\n  question: \"How do I log in?\",\n  answer: \"To log in, please enter your username and select your role (User or Provider) on the main login page.\"\n}, {\n  question: \"How can I see my current rentals?\",\n  answer: \"On the User Dashboard, you can see your current rentals in the 'Current Rental Details' table.\"\n}, {\n  question: \"Where can I find the efficiency score of an equipment?\",\n  answer: \"The efficiency score is listed in the main equipment table on both the User and Provider dashboards.\"\n}, {\n  question: \"How do I filter the equipment list?\",\n  answer: \"On the Provider Dashboard, use the 'Filter & Search' bar to search by Equipment ID, Type, Site ID, or Operator ID.\"\n}, {\n  question: \"What is the Operator Score?\",\n  answer: \"The Operator Score is a performance metric for providers, calculated based on an operator's average engine hours, idle hours, and overdue rentals.\"\n}];\nconst Chatbot = () => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const handleOpenChat = () => setIsOpen(!isOpen);\n  const handleSendMessage = event => {\n    event.preventDefault();\n    const question = event.target.elements.message.value.trim();\n    if (!question) return;\n    const userMessage = {\n      sender: 'user',\n      text: question\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    event.target.elements.message.value = '';\n    setTimeout(() => {\n      let botAnswer = \"I'm sorry, I don't have an answer for that. Your question has been forwarded to a human representative.\";\n      const matchedQA = predefinedQA.find(qa => question.toLowerCase().includes(qa.question.toLowerCase().slice(0, 15)));\n      if (matchedQA) {\n        botAnswer = matchedQA.answer;\n      }\n      const botMessage = {\n        sender: 'bot',\n        text: botAnswer\n      };\n      setMessages(prevMessages => [...prevMessages, botMessage]);\n    }, 1000);\n  };\n  const styles = {\n    chatIcon: {\n      position: 'fixed',\n      bottom: '20px',\n      right: '20px',\n      width: '60px',\n      height: '60px',\n      borderRadius: '50%',\n      backgroundColor: '#4299e1',\n      color: 'white',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      cursor: 'pointer',\n      boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\n      zIndex: 1000\n    },\n    chatWindow: {\n      position: 'fixed',\n      bottom: '90px',\n      right: '20px',\n      width: '350px',\n      height: '450px',\n      backgroundColor: 'white',\n      borderRadius: '10px',\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.25)',\n      display: 'flex',\n      flexDirection: 'column',\n      zIndex: 1000,\n      overflow: 'hidden'\n    },\n    chatHeader: {\n      backgroundColor: '#4299e1',\n      color: 'white',\n      padding: '15px',\n      textAlign: 'center',\n      fontWeight: 'bold',\n      position: 'relative'\n    },\n    chatClose: {\n      position: 'absolute',\n      top: '10px',\n      right: '15px',\n      cursor: 'pointer',\n      fontSize: '20px'\n    },\n    chatBody: {\n      flexGrow: 1,\n      padding: '15px',\n      overflowY: 'auto',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      backgroundColor: '#f7fafc'\n    },\n    chatMessage: {\n      padding: '10px 15px',\n      borderRadius: '20px',\n      maxWidth: '75%'\n    },\n    userMessage: {\n      backgroundColor: '#2b6cb0',\n      color: 'white',\n      alignSelf: 'flex-end',\n      borderRadius: '20px 20px 5px 20px'\n    },\n    botMessage: {\n      backgroundColor: '#e2e8f0',\n      color: 'black',\n      alignSelf: 'flex-start',\n      borderRadius: '20px 20px 20px 5px'\n    },\n    chatInputForm: {\n      display: 'flex',\n      padding: '10px',\n      borderTop: '1px solid #e2e8f0',\n      backgroundColor: 'white'\n    },\n    chatInput: {\n      flexGrow: 1,\n      padding: '10px',\n      borderRadius: '20px',\n      border: '1px solid #cbd5e0',\n      outline: 'none'\n    },\n    chatSendButton: {\n      marginLeft: '10px',\n      padding: '10px',\n      borderRadius: '50%',\n      backgroundColor: '#4299e1',\n      color: 'white',\n      border: 'none',\n      cursor: 'pointer',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    chatIntro: {\n      textAlign: 'center',\n      color: '#a0aec0',\n      marginTop: 'auto',\n      marginBottom: 'auto'\n    },\n    predefinedQuestions: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      padding: '15px'\n    },\n    predefinedQuestionButton: {\n      backgroundColor: '#e2e8f0',\n      border: 'none',\n      borderRadius: '10px',\n      padding: '10px',\n      textAlign: 'left',\n      cursor: 'pointer',\n      transition: 'background-color 0.3s'\n    }\n  };\n  const handlePredefinedQuestion = question => {\n    const fakeEvent = {\n      preventDefault: () => {},\n      target: {\n        elements: {\n          message: {\n            value: question\n          }\n        }\n      }\n    };\n    handleSendMessage(fakeEvent);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatIcon,\n      onClick: handleOpenChat,\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-robot\",\n        style: {\n          fontSize: '28px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatWindow,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chatHeader,\n        children: [\"Smart Rental AI Assistant\", /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: handleOpenChat,\n          style: styles.chatClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.chatBody,\n        children: messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.chatIntro,\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Hello! How can I help you today?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginTop: '10px',\n              marginBottom: '10px'\n            },\n            children: \"Here are some topics you can ask me about:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.predefinedQuestions,\n            children: predefinedQA.map((qa, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.predefinedQuestionButton,\n              onClick: () => handlePredefinedQuestion(qa.question),\n              children: qa.question\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 29\n        }, this) : messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            ...styles.chatMessage,\n            ...(msg.sender === 'user' ? styles.userMessage : styles.botMessage)\n          },\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendMessage,\n        style: styles.chatInputForm,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\",\n          placeholder: \"Type a message...\",\n          style: styles.chatInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: styles.chatSendButton,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-paper-plane\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(Chatbot, \"/zq3xNPdoyvQ8Sh3MxhElB9RFyo=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","predefinedQA","question","answer","Chatbot","_s","isOpen","setIsOpen","messages","setMessages","handleOpenChat","handleSendMessage","event","preventDefault","target","elements","message","value","trim","userMessage","sender","text","prevMessages","setTimeout","botAnswer","matchedQA","find","qa","toLowerCase","includes","slice","botMessage","styles","chatIcon","position","bottom","right","width","height","borderRadius","backgroundColor","color","display","justifyContent","alignItems","cursor","boxShadow","zIndex","chatWindow","flexDirection","overflow","chatHeader","padding","textAlign","fontWeight","chatClose","top","fontSize","chatBody","flexGrow","overflowY","gap","chatMessage","maxWidth","alignSelf","chatInputForm","borderTop","chatInput","border","outline","chatSendButton","marginLeft","chatIntro","marginTop","marginBottom","predefinedQuestions","predefinedQuestionButton","transition","handlePredefinedQuestion","fakeEvent","children","style","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","msg","onSubmit","type","name","placeholder","_c","$RefreshReg$"],"sources":["D:/ts/my-dashboard/src/Chatbot.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Predefined Q&A for the chatbot\r\nconst predefinedQA = [\r\n    {\r\n        question: \"How do I log in?\",\r\n        answer: \"To log in, please enter your username and select your role (User or Provider) on the main login page.\"\r\n    },\r\n    {\r\n        question: \"How can I see my current rentals?\",\r\n        answer: \"On the User Dashboard, you can see your current rentals in the 'Current Rental Details' table.\"\r\n    },\r\n    {\r\n        question: \"Where can I find the efficiency score of an equipment?\",\r\n        answer: \"The efficiency score is listed in the main equipment table on both the User and Provider dashboards.\"\r\n    },\r\n    {\r\n        question: \"How do I filter the equipment list?\",\r\n        answer: \"On the Provider Dashboard, use the 'Filter & Search' bar to search by Equipment ID, Type, Site ID, or Operator ID.\"\r\n    },\r\n    {\r\n        question: \"What is the Operator Score?\",\r\n        answer: \"The Operator Score is a performance metric for providers, calculated based on an operator's average engine hours, idle hours, and overdue rentals.\"\r\n    }\r\n];\r\n\r\nconst Chatbot = () => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const handleOpenChat = () => setIsOpen(!isOpen);\r\n\r\n    const handleSendMessage = (event) => {\r\n        event.preventDefault();\r\n        const question = event.target.elements.message.value.trim();\r\n        if (!question) return;\r\n\r\n        const userMessage = { sender: 'user', text: question };\r\n        setMessages((prevMessages) => [...prevMessages, userMessage]);\r\n\r\n        event.target.elements.message.value = '';\r\n\r\n        setTimeout(() => {\r\n            let botAnswer = \"I'm sorry, I don't have an answer for that. Your question has been forwarded to a human representative.\";\r\n            \r\n            const matchedQA = predefinedQA.find(qa => \r\n                question.toLowerCase().includes(qa.question.toLowerCase().slice(0, 15))\r\n            );\r\n\r\n            if (matchedQA) {\r\n                botAnswer = matchedQA.answer;\r\n            }\r\n\r\n            const botMessage = { sender: 'bot', text: botAnswer };\r\n            setMessages((prevMessages) => [...prevMessages, botMessage]);\r\n        }, 1000);\r\n    };\r\n\r\n    const styles = {\r\n        chatIcon: {\r\n            position: 'fixed',\r\n            bottom: '20px',\r\n            right: '20px',\r\n            width: '60px',\r\n            height: '60px',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#4299e1',\r\n            color: 'white',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            cursor: 'pointer',\r\n            boxShadow: '0 4px 8px rgba(0, 0, 0, 0.2)',\r\n            zIndex: 1000\r\n        },\r\n        chatWindow: {\r\n            position: 'fixed',\r\n            bottom: '90px',\r\n            right: '20px',\r\n            width: '350px',\r\n            height: '450px',\r\n            backgroundColor: 'white',\r\n            borderRadius: '10px',\r\n            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.25)',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            zIndex: 1000,\r\n            overflow: 'hidden'\r\n        },\r\n        chatHeader: {\r\n            backgroundColor: '#4299e1',\r\n            color: 'white',\r\n            padding: '15px',\r\n            textAlign: 'center',\r\n            fontWeight: 'bold',\r\n            position: 'relative'\r\n        },\r\n        chatClose: {\r\n            position: 'absolute',\r\n            top: '10px',\r\n            right: '15px',\r\n            cursor: 'pointer',\r\n            fontSize: '20px'\r\n        },\r\n        chatBody: {\r\n            flexGrow: 1,\r\n            padding: '15px',\r\n            overflowY: 'auto',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '10px',\r\n            backgroundColor: '#f7fafc'\r\n        },\r\n        chatMessage: {\r\n            padding: '10px 15px',\r\n            borderRadius: '20px',\r\n            maxWidth: '75%'\r\n        },\r\n        userMessage: {\r\n            backgroundColor: '#2b6cb0',\r\n            color: 'white',\r\n            alignSelf: 'flex-end',\r\n            borderRadius: '20px 20px 5px 20px'\r\n        },\r\n        botMessage: {\r\n            backgroundColor: '#e2e8f0',\r\n            color: 'black',\r\n            alignSelf: 'flex-start',\r\n            borderRadius: '20px 20px 20px 5px'\r\n        },\r\n        chatInputForm: {\r\n            display: 'flex',\r\n            padding: '10px',\r\n            borderTop: '1px solid #e2e8f0',\r\n            backgroundColor: 'white'\r\n        },\r\n        chatInput: {\r\n            flexGrow: 1,\r\n            padding: '10px',\r\n            borderRadius: '20px',\r\n            border: '1px solid #cbd5e0',\r\n            outline: 'none'\r\n        },\r\n        chatSendButton: {\r\n            marginLeft: '10px',\r\n            padding: '10px',\r\n            borderRadius: '50%',\r\n            backgroundColor: '#4299e1',\r\n            color: 'white',\r\n            border: 'none',\r\n            cursor: 'pointer',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center'\r\n        },\r\n        chatIntro: {\r\n            textAlign: 'center',\r\n            color: '#a0aec0',\r\n            marginTop: 'auto',\r\n            marginBottom: 'auto'\r\n        },\r\n        predefinedQuestions: {\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            gap: '10px',\r\n            padding: '15px',\r\n        },\r\n        predefinedQuestionButton: {\r\n            backgroundColor: '#e2e8f0',\r\n            border: 'none',\r\n            borderRadius: '10px',\r\n            padding: '10px',\r\n            textAlign: 'left',\r\n            cursor: 'pointer',\r\n            transition: 'background-color 0.3s'\r\n        }\r\n    };\r\n\r\n    const handlePredefinedQuestion = (question) => {\r\n        const fakeEvent = {\r\n            preventDefault: () => {},\r\n            target: {\r\n                elements: {\r\n                    message: { value: question }\r\n                }\r\n            }\r\n        };\r\n        handleSendMessage(fakeEvent);\r\n    };\r\n    \r\n\r\n    return (\r\n        <>\r\n            <div style={styles.chatIcon} onClick={handleOpenChat}>\r\n                <i className=\"fas fa-robot\" style={{ fontSize: '28px' }}></i>\r\n            </div>\r\n\r\n            {isOpen && (\r\n                <div style={styles.chatWindow}>\r\n                    <div style={styles.chatHeader}>\r\n                        Smart Rental AI Assistant\r\n                        <span onClick={handleOpenChat} style={styles.chatClose}>&times;</span>\r\n                    </div>\r\n                    <div style={styles.chatBody}>\r\n                        {messages.length === 0 ? (\r\n                            <div style={styles.chatIntro}>\r\n                                <strong>Hello! How can I help you today?</strong>\r\n                                <p style={{marginTop: '10px', marginBottom: '10px'}}>Here are some topics you can ask me about:</p>\r\n                                <div style={styles.predefinedQuestions}>\r\n                                    {predefinedQA.map((qa, index) => (\r\n                                        <button key={index} style={styles.predefinedQuestionButton} onClick={() => handlePredefinedQuestion(qa.question)}>\r\n                                            {qa.question}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        ) : (\r\n                            messages.map((msg, index) => (\r\n                                <div\r\n                                    key={index}\r\n                                    style={{\r\n                                        ...styles.chatMessage,\r\n                                        ...(msg.sender === 'user' ? styles.userMessage : styles.botMessage)\r\n                                    }}\r\n                                >\r\n                                    {msg.text}\r\n                                </div>\r\n                            ))\r\n                        )}\r\n                    </div>\r\n                    <form onSubmit={handleSendMessage} style={styles.chatInputForm}>\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"message\"\r\n                            placeholder=\"Type a message...\"\r\n                            style={styles.chatInput}\r\n                        />\r\n                        <button type=\"submit\" style={styles.chatSendButton}>\r\n                            <i className=\"fas fa-paper-plane\"></i>\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Chatbot;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,YAAY,GAAG,CACjB;EACIC,QAAQ,EAAE,kBAAkB;EAC5BC,MAAM,EAAE;AACZ,CAAC,EACD;EACID,QAAQ,EAAE,mCAAmC;EAC7CC,MAAM,EAAE;AACZ,CAAC,EACD;EACID,QAAQ,EAAE,wDAAwD;EAClEC,MAAM,EAAE;AACZ,CAAC,EACD;EACID,QAAQ,EAAE,qCAAqC;EAC/CC,MAAM,EAAE;AACZ,CAAC,EACD;EACID,QAAQ,EAAE,6BAA6B;EACvCC,MAAM,EAAE;AACZ,CAAC,CACJ;AAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACY,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMc,cAAc,GAAGA,CAAA,KAAMH,SAAS,CAAC,CAACD,MAAM,CAAC;EAE/C,MAAMK,iBAAiB,GAAIC,KAAK,IAAK;IACjCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMX,QAAQ,GAAGU,KAAK,CAACE,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC;IAC3D,IAAI,CAAChB,QAAQ,EAAE;IAEf,MAAMiB,WAAW,GAAG;MAAEC,MAAM,EAAE,MAAM;MAAEC,IAAI,EAAEnB;IAAS,CAAC;IACtDO,WAAW,CAAEa,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEH,WAAW,CAAC,CAAC;IAE7DP,KAAK,CAACE,MAAM,CAACC,QAAQ,CAACC,OAAO,CAACC,KAAK,GAAG,EAAE;IAExCM,UAAU,CAAC,MAAM;MACb,IAAIC,SAAS,GAAG,yGAAyG;MAEzH,MAAMC,SAAS,GAAGxB,YAAY,CAACyB,IAAI,CAACC,EAAE,IAClCzB,QAAQ,CAAC0B,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACF,EAAE,CAACzB,QAAQ,CAAC0B,WAAW,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAC1E,CAAC;MAED,IAAIL,SAAS,EAAE;QACXD,SAAS,GAAGC,SAAS,CAACtB,MAAM;MAChC;MAEA,MAAM4B,UAAU,GAAG;QAAEX,MAAM,EAAE,KAAK;QAAEC,IAAI,EAAEG;MAAU,CAAC;MACrDf,WAAW,CAAEa,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAES,UAAU,CAAC,CAAC;IAChE,CAAC,EAAE,IAAI,CAAC;EACZ,CAAC;EAED,MAAMC,MAAM,GAAG;IACXC,QAAQ,EAAE;MACNC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE,MAAM;MACdC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACdC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE,SAAS;MACjBC,SAAS,EAAE,8BAA8B;MACzCC,MAAM,EAAE;IACZ,CAAC;IACDC,UAAU,EAAE;MACRd,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,MAAM;MACdC,KAAK,EAAE,MAAM;MACbC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,OAAO;MACfE,eAAe,EAAE,OAAO;MACxBD,YAAY,EAAE,MAAM;MACpBO,SAAS,EAAE,gCAAgC;MAC3CJ,OAAO,EAAE,MAAM;MACfO,aAAa,EAAE,QAAQ;MACvBF,MAAM,EAAE,IAAI;MACZG,QAAQ,EAAE;IACd,CAAC;IACDC,UAAU,EAAE;MACRX,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACdW,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE,QAAQ;MACnBC,UAAU,EAAE,MAAM;MAClBpB,QAAQ,EAAE;IACd,CAAC;IACDqB,SAAS,EAAE;MACPrB,QAAQ,EAAE,UAAU;MACpBsB,GAAG,EAAE,MAAM;MACXpB,KAAK,EAAE,MAAM;MACbS,MAAM,EAAE,SAAS;MACjBY,QAAQ,EAAE;IACd,CAAC;IACDC,QAAQ,EAAE;MACNC,QAAQ,EAAE,CAAC;MACXP,OAAO,EAAE,MAAM;MACfQ,SAAS,EAAE,MAAM;MACjBlB,OAAO,EAAE,MAAM;MACfO,aAAa,EAAE,QAAQ;MACvBY,GAAG,EAAE,MAAM;MACXrB,eAAe,EAAE;IACrB,CAAC;IACDsB,WAAW,EAAE;MACTV,OAAO,EAAE,WAAW;MACpBb,YAAY,EAAE,MAAM;MACpBwB,QAAQ,EAAE;IACd,CAAC;IACD5C,WAAW,EAAE;MACTqB,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACduB,SAAS,EAAE,UAAU;MACrBzB,YAAY,EAAE;IAClB,CAAC;IACDR,UAAU,EAAE;MACRS,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACduB,SAAS,EAAE,YAAY;MACvBzB,YAAY,EAAE;IAClB,CAAC;IACD0B,aAAa,EAAE;MACXvB,OAAO,EAAE,MAAM;MACfU,OAAO,EAAE,MAAM;MACfc,SAAS,EAAE,mBAAmB;MAC9B1B,eAAe,EAAE;IACrB,CAAC;IACD2B,SAAS,EAAE;MACPR,QAAQ,EAAE,CAAC;MACXP,OAAO,EAAE,MAAM;MACfb,YAAY,EAAE,MAAM;MACpB6B,MAAM,EAAE,mBAAmB;MAC3BC,OAAO,EAAE;IACb,CAAC;IACDC,cAAc,EAAE;MACZC,UAAU,EAAE,MAAM;MAClBnB,OAAO,EAAE,MAAM;MACfb,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACd2B,MAAM,EAAE,MAAM;MACdvB,MAAM,EAAE,SAAS;MACjBH,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE;IAChB,CAAC;IACD4B,SAAS,EAAE;MACPnB,SAAS,EAAE,QAAQ;MACnBZ,KAAK,EAAE,SAAS;MAChBgC,SAAS,EAAE,MAAM;MACjBC,YAAY,EAAE;IAClB,CAAC;IACDC,mBAAmB,EAAE;MACjBjC,OAAO,EAAE,MAAM;MACfO,aAAa,EAAE,QAAQ;MACvBY,GAAG,EAAE,MAAM;MACXT,OAAO,EAAE;IACb,CAAC;IACDwB,wBAAwB,EAAE;MACtBpC,eAAe,EAAE,SAAS;MAC1B4B,MAAM,EAAE,MAAM;MACd7B,YAAY,EAAE,MAAM;MACpBa,OAAO,EAAE,MAAM;MACfC,SAAS,EAAE,MAAM;MACjBR,MAAM,EAAE,SAAS;MACjBgC,UAAU,EAAE;IAChB;EACJ,CAAC;EAED,MAAMC,wBAAwB,GAAI5E,QAAQ,IAAK;IAC3C,MAAM6E,SAAS,GAAG;MACdlE,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;MACxBC,MAAM,EAAE;QACJC,QAAQ,EAAE;UACNC,OAAO,EAAE;YAAEC,KAAK,EAAEf;UAAS;QAC/B;MACJ;IACJ,CAAC;IACDS,iBAAiB,CAACoE,SAAS,CAAC;EAChC,CAAC;EAGD,oBACIjF,OAAA,CAAAE,SAAA;IAAAgF,QAAA,gBACIlF,OAAA;MAAKmF,KAAK,EAAEjD,MAAM,CAACC,QAAS;MAACiD,OAAO,EAAExE,cAAe;MAAAsE,QAAA,eACjDlF,OAAA;QAAGqF,SAAS,EAAC,cAAc;QAACF,KAAK,EAAE;UAAExB,QAAQ,EAAE;QAAO;MAAE;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC,EAELjF,MAAM,iBACHR,OAAA;MAAKmF,KAAK,EAAEjD,MAAM,CAACgB,UAAW;MAAAgC,QAAA,gBAC1BlF,OAAA;QAAKmF,KAAK,EAAEjD,MAAM,CAACmB,UAAW;QAAA6B,QAAA,GAAC,2BAE3B,eAAAlF,OAAA;UAAMoF,OAAO,EAAExE,cAAe;UAACuE,KAAK,EAAEjD,MAAM,CAACuB,SAAU;UAAAyB,QAAA,EAAC;QAAO;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrE,CAAC,eACNzF,OAAA;QAAKmF,KAAK,EAAEjD,MAAM,CAAC0B,QAAS;QAAAsB,QAAA,EACvBxE,QAAQ,CAACgF,MAAM,KAAK,CAAC,gBAClB1F,OAAA;UAAKmF,KAAK,EAAEjD,MAAM,CAACwC,SAAU;UAAAQ,QAAA,gBACzBlF,OAAA;YAAAkF,QAAA,EAAQ;UAAgC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjDzF,OAAA;YAAGmF,KAAK,EAAE;cAACR,SAAS,EAAE,MAAM;cAAEC,YAAY,EAAE;YAAM,CAAE;YAAAM,QAAA,EAAC;UAA0C;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACnGzF,OAAA;YAAKmF,KAAK,EAAEjD,MAAM,CAAC2C,mBAAoB;YAAAK,QAAA,EAClC/E,YAAY,CAACwF,GAAG,CAAC,CAAC9D,EAAE,EAAE+D,KAAK,kBACxB5F,OAAA;cAAoBmF,KAAK,EAAEjD,MAAM,CAAC4C,wBAAyB;cAACM,OAAO,EAAEA,CAAA,KAAMJ,wBAAwB,CAACnD,EAAE,CAACzB,QAAQ,CAAE;cAAA8E,QAAA,EAC5GrD,EAAE,CAACzB;YAAQ,GADHwF,KAAK;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACX;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC,GAEN/E,QAAQ,CAACiF,GAAG,CAAC,CAACE,GAAG,EAAED,KAAK,kBACpB5F,OAAA;UAEImF,KAAK,EAAE;YACH,GAAGjD,MAAM,CAAC8B,WAAW;YACrB,IAAI6B,GAAG,CAACvE,MAAM,KAAK,MAAM,GAAGY,MAAM,CAACb,WAAW,GAAGa,MAAM,CAACD,UAAU;UACtE,CAAE;UAAAiD,QAAA,EAEDW,GAAG,CAACtE;QAAI,GANJqE,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOT,CACR;MACJ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACNzF,OAAA;QAAM8F,QAAQ,EAAEjF,iBAAkB;QAACsE,KAAK,EAAEjD,MAAM,CAACiC,aAAc;QAAAe,QAAA,gBAC3DlF,OAAA;UACI+F,IAAI,EAAC,MAAM;UACXC,IAAI,EAAC,SAAS;UACdC,WAAW,EAAC,mBAAmB;UAC/Bd,KAAK,EAAEjD,MAAM,CAACmC;QAAU;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFzF,OAAA;UAAQ+F,IAAI,EAAC,QAAQ;UAACZ,KAAK,EAAEjD,MAAM,CAACsC,cAAe;UAAAU,QAAA,eAC/ClF,OAAA;YAAGqF,SAAS,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACR;EAAA,eACH,CAAC;AAEX,CAAC;AAAClF,EAAA,CA3NID,OAAO;AAAA4F,EAAA,GAAP5F,OAAO;AA6Nb,eAAeA,OAAO;AAAC,IAAA4F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}